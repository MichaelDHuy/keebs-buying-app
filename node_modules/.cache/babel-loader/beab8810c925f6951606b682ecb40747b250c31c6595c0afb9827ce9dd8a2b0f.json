{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n      }\n    }\n  }\n});\nconst sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n    const response = await fetch('https://react-maxi-project-04-default-rtdb.firebaseio.com/keebsCart.json', {\n      method: 'PUT',\n      body: JSON.stringify(cart)\n    });\n    if (!response.ok) {\n      throw new Error('Sending cart data failed!');\n    }\n    dispatch(uiActions.showNotification({\n      status: 'success',\n      title: 'Success!',\n      message: 'Sending cart data successfully!'\n    }));\n    dispatch(uiActions.showNotification({\n      status: 'error',\n      title: 'Error!',\n      message: 'Sending cart data failed!'\n    }));\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","sendCartData","cart","dispatch","showNotification","status","message","response","fetch","method","body","JSON","stringify","ok","Error","cartActions","actions"],"sources":["/Users/anhdaden/lighthouse/Udemy/React-Maxi/01-starting-project/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n  },\n  reducers: {\n    replaceCart(state,action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!existingItem){\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity ++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find((item) => item.id === id);\n      state.totalQuantity--;\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id)\n      } else {\n        existingItem.quantity--;\n      }\n    },\n  },\n});\n\nconst sendCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n      })\n    );\n    \n    const response = await fetch('https://react-maxi-project-04-default-rtdb.firebaseio.com/keebsCart.json', { \n      method: 'PUT',\n      body: JSON.stringify(cart),\n      });\n\n      if (!response.ok) {\n        throw new Error('Sending cart data failed!');\n      }\n\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sending cart data successfully!'\n      }));\n\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending cart data failed!'\n      }));\n  };\n} \n\nexport const cartActions = cartSlice.actions; \nexport default cartSlice;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}